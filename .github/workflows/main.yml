name: Run schemachange

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  schemachange:
    runs-on: ubuntu-latest
    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install schemachange and Snowflake connector
        run: |
          python -m pip install --upgrade pip
          pip install schemachange snowflake-connector-python

      - name: Ensure METADATA.SCHEMACHANGE exists
        run: |
          python <<EOF
import snowflake.connector
import os

conn = snowflake.connector.connect(
    user=os.environ['SNOWFLAKE_USER'],
    password=os.environ['SNOWFLAKE_PASSWORD'],
    account=os.environ['SNOWFLAKE_ACCOUNT'],
    role=os.environ['SNOWFLAKE_ROLE'],
    warehouse=os.environ['SNOWFLAKE_WAREHOUSE']
)

cs = conn.cursor()
try:
    cs.execute('CREATE DATABASE IF NOT EXISTS METADATA')
    cs.execute('CREATE SCHEMA IF NOT EXISTS METADATA.SCHEMACHANGE')
finally:
    cs.close()
    conn.close()
EOF

      - name: Create connections.toml file
        run: |
          cat <<EOF > connections.toml
[connections]
account = "${SNOWFLAKE_ACCOUNT}"
user = "${SNOWFLAKE_USER}"
password = "${SNOWFLAKE_PASSWORD}"
role = "${SNOWFLAKE_ROLE}"
warehouse = "${SNOWFLAKE_WAREHOUSE}"
database = "${SNOWFLAKE_DATABASE}"
schema = "${SNOWFLAKE_SCHEMA}"
EOF
          chmod 600 connections.toml

      - name: Run schemachange deploy
        run: |
          schemachange -f deploy --connection-name connections --connections-file-path ./connections.toml
